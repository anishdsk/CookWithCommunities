{"version":3,"sources":["main.js"],"names":["document","addEventListener","passwordForm","getElementById","formContainer","initDb","openRequest","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","passwordStore","createIndex","unique","transaction","oncomplete","objectStore","add","id","hash","Promise","resolve","reject","onsuccess","onerror","error","hashPassword","password","sha3_256","checkPassword","hashedPassword","getRequest","get","storedHash","showEventForm","eventForm","createElement","innerHTML","appendChild","storeEvent","eventName","eventDate","eventTime","request","preventDefault","value","eventList","listItem","textContent","loadEventList","alert"],"mappings":"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","file":"main.d1f5e8f5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    const passwordForm = document.getElementById('passwordForm');\r\n    const formContainer = document.getElementById('formContainer');\r\n    const initialPasswordHash = 'a794e600d504779d87143f73a48aa0f9553c3c3e2b9acdbb17a4ea4ff4c4f01f'; // This is the SHA-3 hash of 'cwcadminpassword'\r\n\r\n    // Initialize the IndexedDB database and store the initial password hash\r\n    const initDb = async () => {\r\n        const openRequest = indexedDB.open('passwordDB', 2);\r\n\r\n        openRequest.onupgradeneeded = (event) => {\r\n            const db = event.target.result;\r\n\r\n            // Create an object store for events if it doesn't exist\r\n            if (!db.objectStoreNames.contains('events')) {\r\n                db.createObjectStore('events', { keyPath: 'id', autoIncrement: true });\r\n            }\r\n\r\n            // Create an object store for passwords if it doesn't exist\r\n            if (!db.objectStoreNames.contains('passwords')) {\r\n                const passwordStore = db.createObjectStore('passwords', { keyPath: 'id' });\r\n                passwordStore.createIndex('hash', 'hash', { unique: true });\r\n                passwordStore.transaction.oncomplete = () => {\r\n                    const store = db.transaction('passwords', 'readwrite').objectStore('passwords');\r\n                    store.add({ id: 1, hash: initialPasswordHash });\r\n                };\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            openRequest.onsuccess = () => resolve(openRequest.result);\r\n            openRequest.onerror = () => reject(openRequest.error);\r\n        });\r\n    };\r\n\r\n    const db = await initDb();\r\n\r\n    // Hash the input password using SHA-3\r\n    const hashPassword = async (password) => {\r\n        const hash = sha3_256(password);\r\n        return hash;\r\n    };\r\n\r\n    // Check if the hashed input password matches the stored password hash\r\n    const checkPassword = async (password) => {\r\n        const hashedPassword = await hashPassword(password);\r\n\r\n        return new Promise((resolve) => {\r\n            const transaction = db.transaction('passwords', 'readonly');\r\n            const store = transaction.objectStore('passwords');\r\n            const getRequest = store.get(1);\r\n\r\n            getRequest.onsuccess = () => {\r\n                const storedHash = getRequest.result.hash;\r\n                resolve(hashedPassword === storedHash);\r\n            };\r\n        });\r\n    };\r\n\r\n    // Replace the password form with the event form\r\n    const showEventForm = () => {\r\n        const eventForm = document.createElement('form');\r\n        eventForm.innerHTML = `\r\n            <label for=\"eventName\">Event name:</label>\r\n            <input type=\"text\" id=\"eventName\" name=\"eventName\" required>\r\n            <br>\r\n            <label for=\"eventDate\">Event date:</label>\r\n            <input type=\"date\" id=\"eventDate\" name=\"eventDate\" required>\r\n            <br>\r\n            <label for=\"eventTime\">Event time:</label>\r\n            <input type=\"time\" id=\"eventTime\" name=\"eventTime\" required>\r\n            <br>\r\n            <button type=\"submit\">Create event</button>\r\n        `;\r\n        formContainer.innerHTML = '';\r\n        formContainer.appendChild(eventForm);\r\n\r\n        // Function to store event data in the IndexedDB\r\nconst storeEvent = async (eventName, eventDate, eventTime) => {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = db.transaction('events', 'readwrite');\r\n      const store = transaction.objectStore('events');\r\n      const request = store.add({ eventName, eventDate, eventTime });\r\n  \r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  };\r\n  \r\n  // Handle the event form submission\r\n  eventForm.addEventListener('submit', async (event) => {\r\n    event.preventDefault();\r\n  \r\n    const eventName = event.target.eventName.value;\r\n    const eventDate = event.target.eventDate.value;\r\n    const eventTime = event.target.eventTime.value;\r\n  \r\n    await storeEvent(eventName, eventDate, eventTime);\r\n  \r\n    const eventList = document.getElementById('eventList');\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = `Event Name: ${eventName}, Event Date: ${eventDate}, Event Time: ${eventTime}`;\r\n    eventList.appendChild(listItem);\r\n  \r\n    // Add your custom logic here to store or process the event data\r\n  });\r\n  \r\n  // Load the event list from the IndexedDB when the page is loaded\r\n  loadEventList();\r\n  };\r\n  \r\n  // Check the password and show the event form if the password is correct\r\n  passwordForm.addEventListener('submit', async (event) => {\r\n    event.preventDefault();\r\n    const password = event.target.password.value;\r\n  \r\n    if (checkPassword(password)) {\r\n      showEventForm();\r\n    } else {\r\n      alert('Incorrect password');\r\n    }\r\n  });\r\n  });\r\n  \r\n"]}