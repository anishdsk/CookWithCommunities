{"version":3,"sources":["main.js"],"names":["formatDate","date","year","getFullYear","month","getMonth","slice","day","getDate","document","addEventListener","datePickerElement","querySelector","datePickerInstance","M","Datepicker","init","getElementById","selectedDate","formattedDate","localStorage","setItem","console","log","savedDate","getItem","openRequest","indexedDB","open","saveDateToIndexedDB","id","value","onsuccess","event","target","result","transaction","objectStore","put","getDateFromIndexedDB","get","onupgradeneeded","createObjectStore","keyPath"],"mappings":";AAAA,aAmBA,SAASA,EAAWC,GAClB,IAAMC,EAAOD,EAAKE,cACZC,GAAS,KAAOH,EAAKI,WAAa,IAAIC,OAAO,GAC7CC,GAAO,IAAMN,EAAKO,WAAWF,OAAO,GAE1C,MAAUJ,GAAAA,OAAAA,EAAQE,KAAAA,OAAAA,EAASG,KAAAA,OAAAA,GAtB7BE,SAASC,iBAAiB,mBAAoB,WAC5C,IAAMC,EAAoBF,SAASG,cAAc,eAC3CC,EAAqBC,EAAEC,WAAWC,KAAKL,GAEtBF,SAASQ,eAAe,aAChCP,iBAAiB,QAAS,WACvC,IAAMQ,EAAeL,EAAmBZ,KACxC,GAAIiB,EAAc,CAChB,IAAMC,EAAgBnB,EAAWkB,GACjCE,aAAaC,QAAQ,eAAgBF,GACrCG,QAAQC,IAAI,uBAAwBJ,QAEpCG,QAAQC,IAAI,wBAalB,IAAMC,EAAYJ,aAAaK,QAAQ,gBACvCH,QAAQC,IAAI,wBAAyBC,GAKrC,IAAME,EAAcC,UAAUC,KAAK,aAAc,GASjD,SAASC,EAAoB5B,GAC3B,IAAMuB,EAAY,CAAEM,GAAI,eAAgBC,MAAO9B,GAE/CyB,EAAYM,UAAY,SAAUC,GACrBA,EAAMC,OAAOC,OACDC,YAAY,CAAC,SAAU,aACpBC,YAAY,SAEhCC,IAAId,GACVF,QAAQC,IAAI,2BAA4BC,EAAUO,QAKtD,SAASQ,IACPb,EAAYM,UAAY,SAAUC,GACrBA,EAAMC,OAAOC,OACDC,YAAY,CAAC,SAAU,YACpBC,YAAY,SAEbG,IAAI,gBAElBR,UAAY,SAAUC,GAC/B,IAAME,EAASF,EAAMC,OAAOC,OACxBA,EACFb,QAAQC,IAAI,iCAAkCY,EAAOJ,OAErDT,QAAQC,IAAI,gCAjCpBG,EAAYe,gBAAkB,SAAUR,GAC3BA,EAAMC,OAAOC,OACrBO,kBAAkB,QAAS,CAAEC,QAAS","file":"main.4f1b8b65.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const datePickerElement = document.querySelector(\".datepicker\");\r\n  const datePickerInstance = M.Datepicker.init(datePickerElement);\r\n\r\n  const saveDateButton = document.getElementById(\"save-date\");\r\n  saveDateButton.addEventListener(\"click\", function () {\r\n    const selectedDate = datePickerInstance.date;\r\n    if (selectedDate) {\r\n      const formattedDate = formatDate(selectedDate);\r\n      localStorage.setItem(\"selectedDate\", formattedDate);\r\n      console.log(\"Selected date saved:\", formattedDate);\r\n    } else {\r\n      console.log(\"No date selected\");\r\n    }\r\n  });\r\n});\r\n\r\nfunction formatDate(date) {\r\n  const year = date.getFullYear();\r\n  const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Add 1 because months are zero-based\r\n  const day = (\"0\" + date.getDate()).slice(-2);\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst savedDate = localStorage.getItem(\"selectedDate\");\r\nconsole.log(\"Retrieved saved date:\", savedDate);\r\n\r\n////////////////\r\n\r\n// Open (or create) the IndexedDB\r\nconst openRequest = indexedDB.open(\"myDatabase\", 1);\r\n\r\n// If the database doesn't exist or the version is outdated, create the database and the object store\r\nopenRequest.onupgradeneeded = function (event) {\r\n  const db = event.target.result;\r\n  db.createObjectStore(\"dates\", { keyPath: \"id\" });\r\n};\r\n\r\n// Save the selected date to IndexedDB\r\nfunction saveDateToIndexedDB(date) {\r\n  const savedDate = { id: \"selectedDate\", value: date };\r\n\r\n  openRequest.onsuccess = function (event) {\r\n    const db = event.target.result;\r\n    const transaction = db.transaction([\"dates\"], \"readwrite\");\r\n    const store = transaction.objectStore(\"dates\");\r\n\r\n    store.put(savedDate);\r\n    console.log(\"Date saved to IndexedDB:\", savedDate.value);\r\n  };\r\n}\r\n\r\n// Retrieve the saved date from IndexedDB\r\nfunction getDateFromIndexedDB() {\r\n  openRequest.onsuccess = function (event) {\r\n    const db = event.target.result;\r\n    const transaction = db.transaction([\"dates\"], \"readonly\");\r\n    const store = transaction.objectStore(\"dates\");\r\n\r\n    const getRequest = store.get(\"selectedDate\");\r\n\r\n    getRequest.onsuccess = function (event) {\r\n      const result = event.target.result;\r\n      if (result) {\r\n        console.log(\"Retrieved date from IndexedDB:\", result.value);\r\n      } else {\r\n        console.log(\"No date found in IndexedDB\");\r\n      }\r\n    };\r\n  };\r\n}\r\n"]}